--- 
jobs: 
  test: 
    machine: 
      docker_layer_caching: true
      image: "ubuntu-2004:current"
      resource_class: medium
    steps: 
      - 
        checkout: 
          path: ~/app
      -
        run:
          command: |
            pip3 install yq
            wget https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz
            tar xvf helm-v3.9.0-linux-amd64.tar.gz
            sudo mv linux-amd64/helm /usr/local/bin
            rm -r helm-v3.9.0-linux-amd64.tar.gz linux-amd64
            sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64
            sudo chmod +x /usr/local/bin/hadolint
          name: Install Dependencies
      -
        run:
          command: |
            cd ~/app/docker
            /usr/local/bin/hadolint --ignore DL3018 --ignore SC2086 Dockerfile
          name: Lint Dockerfile
      -
        run:
          command: |
            cd ~/app/helm
            helm lint
          name: Lint Helm Chart
      - 
        run:
          command: |
            cd ~/app/docker
            docker build -t ghcr.io/iloveyatoo/freshrss:latest -t ghcr.io/iloveyatoo/freshrss:$LATEST_VERSION-$REVISION --build-arg APP_VER=$LATEST_VERSION .
          name: Test Dockerfile
    working_directory: ~/app
  deploy: 
    machine: 
      docker_layer_caching: true
      image: "ubuntu-2004:current"
      resource_class: medium
    steps: 
      - 
        checkout: 
          path: ~/app
      -
        run:
          command: |
            pip3 install yq
            wget https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz
            tar xvf helm-v3.9.0-linux-amd64.tar.gz
            sudo mv linux-amd64/helm /usr/local/bin
            rm -r helm-v3.9.0-linux-amd64.tar.gz linux-amd64
            sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64
            sudo chmod +x /usr/local/bin/hadolint
          name: Install Dependencies
      -
        run:
          command: |
            cd ~/app/docker
            /usr/local/bin/hadolint --ignore DL3018 --ignore SC2086 Dockerfile
          name: Lint Dockerfile
      -
        run:
          command: |
            cd ~/app/helm
            helm lint
          name: Lint Helm Chart
      - 
        run: 
          command: "echo \"$GITHUB_TOKEN\" | docker login --username \"ILoveYaToo\" --password-stdin ghcr.io\n"
          name: "Login to Docker Repo"
      - 
        run: 
          command: |
            cd docker
            export LATEST_VERSION=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/FreshRSS/FreshRSS/releases | jq -r '.[] | select(.prerelease==false) | .tag_name' | sort -V | tail -n1 | cut -d "v" -f 2)
            export GITHUB_API_TOKEN=$(curl -u ILoveYaToo:$GITHUB_TOKEN https://ghcr.io/token\?scope\="repository:<repository/path>:pull" | jq -r .token)
            if [ $(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $GITHUB_API_TOKEN" https://ghcr.io/v2/iloveyatoo/freshrss/manifests/$LATEST_VERSION-<< pipeline.parameters.revision >>) == "404" ]
            then
              docker build -t ghcr.io/iloveyatoo/freshrss:latest -t ghcr.io/iloveyatoo/freshrss:$LATEST_VERSION-<< pipeline.parameters.revision >> --build-arg APP_VER=$LATEST_VERSION .
            fi
          name: "Build Docker Image"
      -
        run:
          command: |
            export LATEST_VERSION=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/FreshRSS/FreshRSS/releases | jq -r '.[] | select(.prerelease==false) | .tag_name' | sort -V | tail -n1 | cut -d "v" -f 2)
            export GITHUB_API_TOKEN=$(curl -u ILoveYaToo:$GITHUB_TOKEN https://ghcr.io/token\?scope\="repository:<repository/path>:pull" | jq -r .token)
            if [ $(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $GITHUB_API_TOKEN" https://ghcr.io/v2/iloveyatoo/freshrss/manifests/$LATEST_VERSION-$REVISION) == "404" ]
            then
              docker push ghcr.io/iloveyatoo/freshrss:latest
              docker push ghcr.io/iloveyatoo/freshrss:$LATEST_VERSION-<< pipeline.parameters.revision >>
            fi
          name: "Upload Docker Image"
      - 
        run: 
          command: |
            cd helm
            export CHART_NAME=$(yq -r .name Chart.yaml)
            export CHART_VERSION=$(yq -r .version Chart.yaml)
            export CHART_TGZ="$CHART_NAME-$CHART_VERSION.tgz"
            mkdir ~/helm_package
            cd ~/helm_package
            helm package ~/app/helm/
          name: "Build Helm Chart"
      - 
        run:
          command: |
            if [[ $(curl -s --request GET --url https://storage.bunnycdn.com/iloveyatoo-helm/ --header 'Accept: */*' --header "AccessKey: $BUNNY_STORAGE_HELM_KEY" | jq -r '.[] | select(.ObjectName==env.CHART_TGZ)') ]]
            then
              echo "Package already exists"
            else
              cd ~/helm_package
              curl --request GET --url https://storage.bunnycdn.com/iloveyatoo-helm/index.yaml --header 'Accept: */*' --header 'Content-Type: application/octet-stream' --header "AccessKey: $BUNNY_STORAGE_HELM_KEY" -o index.yaml
              helm repo index ~/helm_package --merge index.yaml
              curl --request PUT --url https://storage.bunnycdn.com/iloveyatoo-helm/index.yaml --data-binary @index.yaml --header 'Content-Type: application/octet-stream' --header "AccessKey: $BUNNY_STORAGE_HELM_KEY"
              curl --request PUT --url https://storage.bunnycdn.com/iloveyatoo-helm/$CHART_TGZ --data-binary @$CHART_TGZ --header 'Content-Type: application/octet-stream' --header "AccessKey: $BUNNY_STORAGE_HELM_KEY"
            fi
          name: "Upload Helm Chart"
    working_directory: ~/app
version: 2.1
parameters:
  revision:
    type: integer
    default: 3
workflows: 
  default: 
    jobs: 
      - test:
          filters:
            branches:
              ignore: main
      - deploy:
          filters:
            branches:
              only: main
          context: 
            - bunny-storage-helm
            - github