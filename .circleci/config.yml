--- 
jobs: 
  docker-lint: 
    machine: 
      docker_layer_caching: true
      image: "ubuntu-2004:latest"
      resource_class: medium
    steps: 
      - 
        checkout: 
          path: ~/app
      - 
        run: 
          command: |
            sudo wget -O /usr/local/bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64
            sudo chmod +x /usr/local/bin/hadolint
          name: "Install Hadolint"
      -
        run:
          command: |
            /usr/local/bin/hadolint docker/Dockerfile
          name: Hadolint Dockerfile
    working_directory: ~/app
  docker-build-test: 
    machine: 
      docker_layer_caching: false
      image: "ubuntu-2004:latest"
      resource_class: large
    steps: 
      - 
        checkout: 
          path: ~/app
      - 
        run:
          command: |
            cd docker
            export LATEST_VERSION=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/FreshRSS/FreshRSS/releases | jq -r '.[] | select(.prerelease==false) | .tag_name' | sort -V | tail -n1 | cut -d "v" -f 2)
            export GITHUB_API_TOKEN=$(curl -u ILoveYaToo:$GITHUB_TOKEN https://ghcr.io/token\?scope\="repository:<repository/path>:pull" | jq -r .token)
            docker build -t ghcr.io/iloveyatoo/freshrss:latest -t ghcr.io/iloveyatoo/freshrss:$LATEST_VERSION-$REVISION --build-arg APP_VER=$LATEST_VERSION .
          name: Test Dockerfile
    working_directory: ~/app
  docker-build-stable: 
    machine: 
      docker_layer_caching: false
      image: "ubuntu-2004:2022.04.1"
      resource_class: medium
    steps: 
      - 
        checkout: 
          path: ~/app
      - 
        run: 
          command: "echo \"$GITHUB_TOKEN\" | docker login --username \"ILoveYaToo\" --password-stdin ghcr.io\n"
          name: "Github Docker Repo"
      - 
        run: 
          command: |
            cd docker
            export REVISION=2
            export LATEST_VERSION=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/FreshRSS/FreshRSS/releases | jq -r '.[] | select(.prerelease==false) | .tag_name' | sort -V | tail -n1 | cut -d "v" -f 2)
            export GITHUB_API_TOKEN=$(curl -u ILoveYaToo:$GITHUB_TOKEN https://ghcr.io/token\?scope\="repository:<repository/path>:pull" | jq -r .token)
            if [ $(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $GITHUB_API_TOKEN" https://ghcr.io/v2/iloveyatoo/freshrss/manifests/$LATEST_VERSION-$REVISION) == "404" ]
            then
              docker build -t ghcr.io/iloveyatoo/freshrss:latest -t ghcr.io/iloveyatoo/freshrss:$LATEST_VERSION-$REVISION --build-arg APP_VER=$LATEST_VERSION .
              docker push ghcr.io/iloveyatoo/freshrss:latest
              docker push ghcr.io/iloveyatoo/freshrss:$LATEST_VERSION-$REVISION
            fi
          name: "Build FreshRSS Image"
    working_directory: ~/app
version: 2.1
workflows: 
  default: 
    jobs: 
      - docker-lint:
          filters:
            branches:
              ignore: main
          context:
            - github
      - docker-build-test:
          filters:
            branches:
              ignore: main
          context:
            - github
      - docker-build-stable:
          filters:
            branches:
              only: main
          context: 
            - github